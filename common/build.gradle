buildscript {
    ext.kotlin_version = '1.8.21'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id "org.jetbrains.kotlin.jvm" version "1.8.21"
}


group 'io.github.mqzn'
version '1.1.6'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    testImplementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.jetbrains:annotations:23.0.0'
    testImplementation "net.kyori:adventure-api:4.13.1"

    compileOnly 'org.jetbrains:annotations:24.0.1'
    compileOnly "net.kyori:adventure-api:4.13.1"

}

java {
    withSourcesJar()
    withJavadocJar()
}

def targetJavaVersion = 17

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withSourcesJar()
    withJavadocJar()

}

kotlin {
    sourceCompatibility = targetJavaVersion
    targetCompatibility = targetJavaVersion
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId 'mCommands-common'
            version project.version
            from components.java


            pom {
                name = 'mCommands'
                description = 'Advanced command dispatching java library'
                url = 'https://github.com/Mqzn/mCommands'
                inceptionYear = '2023'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'mqzn'
                        name = 'Mqzen'
                        email = 'mezoahmed2507@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/Mqzn/mCommands.git'
                    developerConnection = 'scm:git:ssh://github.com/Mqzn/mCommands.git'
                    url = 'https://github.com/Mqzn/mCommands'
                }
            }

        }

    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

            credentials {
                username = project.properties["ossrhUsername"]
                password = project.properties["ossrhPassword"]
            }

        }

    }
}

signing {
    sign publishing.publications.mavenJava
}

test {
    useJUnitPlatform()
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'signing'
